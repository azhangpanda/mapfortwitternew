points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=5)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1.0,1.0,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=3)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1.0,1.0,0.8,0.8))
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1.0,1.0,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
require(RColorBrewer)
a=quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1.0,1.0,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
pnts= cbind(x =c(8,9,9,8), y =c(1.0,1.0,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
}
pnts= cbind(x =c(8,9,9,8), y =c(10,10,8,8))
legend.gradient(pnts, col2, c("low", "hight") )
pnts= cbind(x =c(8,9,9,8), y =c(1000,1000,80,800))
legend.gradient(pnts, col2, c("low", "hight") )
spplot(test6$city)
spplot(obj=test6, zcol="city")
text(projLong, projLat, test6$city)
text(projLong, projLat+3, test6$city)
text(projLong, projLat+13, test6$city)
text(projLong-3, projLat+13, test6$city)
a=projLong+10
a
projLong
b=progLat-3
b=projgLat-3
b=projLat-3
text(a, b, test6$city)
a=projLong+100
b=projLat-3
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
text(a, b, test6$city)
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
twitter=read.csv("data/eqTwitter")
twitter=read.csv("data/eqTwitter")
read.csv("~Document/fall 14/data science/map for twitter/data")
setwd("~/Documents/academic/fall 14/data science/map for twitter/data")
twitter=read.csv("~/Documents/academic/fall 14/data science/map for twitter/data/eqTwitter")
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
a=projLong+100
b=projLat-3
text(a, b, test6$city)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
text(a, b, test6$city)
text(a, b, test6$city)
twitter=read.csv("~/Documents/academic/fall 14/data science/map for twitter/data/eqTwitter")
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city)
text(projLong+100,projLat-100, test6$city)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
twitter=read.csv("~/Documents/academic/fall 14/data science/map for twitter/data/eqTwitter")
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
a=projLong+100
a
b=projlong-100
b=projLat-100
a=projLong+100
b=projLat-100
text(a,b, test6$city, font=5)
b=projLat-10
projLong=projData$x
projLat=projData$y
a=projLong+10
b=projLat-10
text(a,b, test6$city, font=5)
projLat=projData$y
text(projLong+10,projLat-10, test6$city, font=5)
twitter=read.csv("~/Documents/academic/fall 14/data science/map for twitter/data/eqTwitter")
#twitter
twitter_map <- function(topic, day) {
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
}
twitter=read.csv("~/Documents/academic/fall 14/data science/map for twitter/data/eqTwitter")
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong+10,projLat-10, test6$city, font=5)
text(projLong,projLat, test6$city, font=5)
text(projLong,projLat, test6$city, font=2)
text(projLong,projLat, test6$city, font=1)
text(projLong,projLat, test6$city, font=1)
text(projLong,projLat, test6$city, font=10)
text(projLong,projLat, test6$city, font=10, cex=0.5)
text(projLong,projLat, test6$city, font=10, cex=0.5)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
}
View(twitter)
test6=mutate(test6, txlong=longitude+10)
test6=mutate(test6, txlat=latitude-5)
View(twitter)
head(test6)
text(test6$txlong,test6$txlat, test6$city, font=10, cex=0.5)
topic="#MTVStars"
day="11/17/2014"
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
test6=mutate(test6, txlong=longitude+10)
test6=mutate(test6, txlat=latitude-5)
text(test6$txlong,test6$txlat, test6$city, font=10, cex=0.5)
head(projData)
projLat=projData$y
test6=mutate(test6, txlong=longitude+10)
test6=mutate(test6, txlat=latitude-5)
text(test6$txlong,test6$txlat, test6$city, font=10, cex=0.5)
test6=mutate(test6, txlong=as.numeric(longitude+10))
test6=mutate(test6, txlat=as.numeric(latitude-5))
text(test6$txlong,test6$txlat, test6$city, font=10, cex=0.5)
text(test6$projLong,test6$projLat, test6$city, font=10, cex=0.5)
text(projLong,projLat, test6$city, font=10, cex=0.5)
text(projLong,projLat, test6$city, font=10, cex=0.7)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=4)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=1)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=1)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
points(projLong,projLat,col=col2, pch=19, bg=par("bg"), cex=1)
legned("bottomleft", col2)
legend("bottomleft", col2)
a=quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
legend("bottomleft", a)
legend("bottomleft", quantile(test6$tweets,seq(0,1,by=.25)))
quantile(test6$tweets,seq(0,1,by=.25))
legend("bottomleft", (0%, 25%))
legend("bottomleft", "(0%, 25%)")
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
legend("bottomleft", "(0%, 25%)")
legend("bottomleft", col=col2, "(0%, 25%)")
legend("bottomleft", col=col2, "(0%, 25%)", pt.cex=0.5)
legend("bottomleft", col=col2, "(0%, 25%)", pt.cex=0.5)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
legend("bottomleft", col=col2, "(0%, 25%)", pt.cex=0.5)
legend("bottomleft", col=col2, "(0%, 25%)", text.width=0.5)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
legend("bottomleft", col=col2, "(0%, 25%)", text.width=0.5)
legend.gradient("bottomleft", col2, c("low", "hight") )
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
legend.gradient("bottomleft", col2, c("low", "hight") )
legend.gradient(pnts, col2, c("low", "hight") )
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=1)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
legend.gradient(pnts, col2, c("low", "hight") )
shiny::runApp('~/Documents/academic/fall 14/data science/map for twitter')
legend.gradient(pnts, cols=col2, c("low", "hight") )
legend.gradient(pnts, cols=col2, c("low", "hight") )
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=0.8)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
legend.gradient(pnts, cols=col2, c("low", "hight") )
}
color.legend(11,6,11.8,9,col.labels,testcol,gradient="y")
View(test6)
View(test6)
View(twitter)
test7=filter(twitter, name=topic)
test7=filter(twitter, name==topic)
View(test7)
test7=filter(twitter, date==day)
View(test7)
test7=filter(twitter, X.1==day)
View(test7)
test7=filter(test7, X.1==day)
View(test7)
test7=filter(twitter, name==topic)
test7=filter(test7, X.1==day)
View(test7)
a=sum(test7)
View(test7)
a=summarise(group_by(test7, name), N=n())
View(a)
text(10, 10, a$N)
head(projData)
text(10, 10, a$N, cex=10)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=0.8)
test7=filter(twitter, name==topic)
test7=filter(test7, X.1==day)
a=summarise(group_by(test7, name), N=n())
text(10, 10, a$N, cex=10)
text(-0.05, -0.05, a$N, cex=10)
legend("upperleft", a$N)
legend("upperleft", "a$N")
legend("topleft", "a$N")
print(a$N)
text(-0.05, -0.05, a$N, cex=10)
text(-0.05, -0.05, a$N, cex=10)
require(SDMTools)
pnts= cbind(x =c(0.8,0.9,0.9,0.8), y =c(1,1,0.8,0.8))
View(test6)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
test1=select(twitter, name, city, longitude, latitude, X.1)
test1$X.1=as.character(test1$X.1)
test2=mutate(test1, d=as.numeric(format(as.Date(test1$X.1,format="%m/%d/%y"),"%d")))
d=as.integer(format(as.Date(day,format="%m/%d/%y"),"%d"))
set=c(d:(d+7))
test2=subset(test2, d %in% set)
test3=filter(test2, name==topic)
test4=summarise(group_by(test3, city), tweets=n())
test5=unique(select(test2, city, longitude, latitude))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
View(test6)
test5=unique(select(test2, city, longitude, latitude, X.1))
test6=merge(x=test4, y=test5, by.x="city", by.y="city", all.x=FALSE)
View(test6)
require(maps)
require(mapproj)
require(RColorBrewer)
map("state", proj="lambert", param=c(33,45), orientation=c(90,0,-100),mar=c(0,4))
projData=mapproject(test6$longitude, test6$latitude, projection="lambert", param=c(33,45), orientation=c(90,0,-100))
head(projData)
projLong=projData$x
projLat=projData$y
text(projLong,projLat, test6$city, font=10, cex=0.7, pos=2)
require(RColorBrewer)
quantile(test6$tweets,seq(0,1,by=.25))
col=colorRampPalette(c(brewer.pal(9,"OrRd")))
col2=col(8)[as.numeric(cut(test6$tweets, breaks=quantile(test6$tweets, seq(0,1,length=8))))]
points(projLong,projLat,col=col2, pch=19, bg="grey", cex=0.8)
test7=filter(twitter, name==topic)
test7=filter(test7, X.1==day)
text(-0.05, -0.05, a$N, cex=10, pos=2)
title(main="a")
title(main="total numbers of tweets on" project "is" a$N)
shiny::runApp('~/Documents/academic/fall 14/data science/map for twitter')
